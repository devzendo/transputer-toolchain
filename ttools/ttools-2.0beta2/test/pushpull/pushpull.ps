# 1 "pushpull.S"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "pushpull.S"
# 17 "pushpull.S"
# 1 "pushpull.h" 1
# 18 "pushpull.S" 2
# 48 "pushpull.S"
.globl head@@start;
 head@@start = 0x80008000;





.globl @@hook
@@hook:

 ldc 0; ldc (0x80009000-0x20+0x00)-9f; ldpi; 9: ;; stnl +0;
 ldc 0; ldc (0x80009000-0x20+0x04)-9f; ldpi; 9: ;; stnl +0;
 ldc 0; ldc (0x80009000-0x20+0x08)-9f; ldpi; 9: ;; stnl +0;
 ldc 0; ldc (0x80009000-0x20+0x0c)-9f; ldpi; 9: ;; stnl +0;



 mint;
 ldc (0x80000080)-9f; ldpi; 9: ;; stnl 0;
# 144 "pushpull.S"
 ldc push - 9f
 ldlp +0x50
 startp;
  9:

 ldc pull - 9f
 ldlp +0xa0
 startp;
  9:

 stopp





push:
  1:
 ldc (0x80009000-0x20+0x00)-9f; ldpi; 9: ;
 ldc (0x80001000)-9f; ldpi; 9: ;
 call push1
 ldc (0x80009000-0x20+0x04)-9f; ldpi; 9: ;
 ldc ((0x80001000) + (0x1000)*1)-9f; ldpi; 9: ;
 call push1
 j 1b






push1:
 ajw -2


  1:
 ldtimer; tin;
 ldl (2 +1+1)
 ldnl 0
 stl 1; ldl 1;
 cj 1b


  1:
        ldtimer; adc 1; tin;
 ldl 1
 ldl (2 +1+1)
 ldnl 0
 stl 1; ldl 1;
 diff
 eqc 0; cj 1b


 ldlp 1
 mint; ldnlp +0x20
 ldc 4
 out



 ldl 1;
        eqc -1;
 eqc 0; cj 1f


   ldl (2 +1+0)
   mint; ldnlp +0x20
   ldl 1
   out
  1:

 ldc 0
 ldl (2 +1+1)
 stnl 0

 ajw +2
 ret
# 229 "pushpull.S"
pull:
  1:
 ldc (0x80009000-0x20+0x08)-9f; ldpi; 9: ;
 ldc ((0x80001000) + (0x1000)*2)-9f; ldpi; 9: ;
 call pull1
 ldc (0x80009000-0x20+0x0c)-9f; ldpi; 9: ;
 ldc ((0x80001000) + (0x1000)*3)-9f; ldpi; 9: ;
 call pull1
 j 1b






pull1:
 ajw -2


  1:
 ldl (2 +1+1)
 ldnl 0
 cj 1f
 ldtimer; tin;
 j 1b

  1:

 ldlp 1
 mint; ldnlp +0x20
 ldc 4
 in



 ldl 1;
        eqc -1;
 eqc 0; cj 1f


   ldl (2 +1+0)
   mint; ldnlp +0x20
   ldl 1
   in
  1:

 ldl 1
 ldl (2 +1+1)
 stnl 0

 ajw +2
 ret
